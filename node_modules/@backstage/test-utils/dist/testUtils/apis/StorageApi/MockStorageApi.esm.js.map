{"version":3,"file":"MockStorageApi.esm.js","sources":["../../../../src/testUtils/apis/StorageApi/MockStorageApi.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageApi, StorageValueSnapshot } from '@backstage/core-plugin-api';\nimport { JsonValue, Observable } from '@backstage/types';\nimport ObservableImpl from 'zen-observable';\n\n/**\n * Type for map holding data in {@link MockStorageApi}\n * @public\n */\nexport type MockStorageBucket = { [key: string]: any };\n\n/**\n * Mock implementation of the {@link core-plugin-api#StorageApi} to be used in tests\n * @public\n */\nexport class MockStorageApi implements StorageApi {\n  private readonly namespace: string;\n  private readonly data: MockStorageBucket;\n  private readonly bucketStorageApis: Map<string, MockStorageApi>;\n\n  private constructor(\n    namespace: string,\n    bucketStorageApis: Map<string, MockStorageApi>,\n    data?: MockStorageBucket,\n  ) {\n    this.namespace = namespace;\n    this.bucketStorageApis = bucketStorageApis;\n    this.data = { ...data };\n  }\n\n  static create(data?: MockStorageBucket) {\n    return new MockStorageApi('', new Map(), data);\n  }\n\n  forBucket(name: string): StorageApi {\n    if (!this.bucketStorageApis.has(name)) {\n      this.bucketStorageApis.set(\n        name,\n        new MockStorageApi(\n          `${this.namespace}/${name}`,\n          this.bucketStorageApis,\n          this.data,\n        ),\n      );\n    }\n    return this.bucketStorageApis.get(name)!;\n  }\n\n  snapshot<T extends JsonValue>(key: string): StorageValueSnapshot<T> {\n    if (this.data.hasOwnProperty(this.getKeyName(key))) {\n      const data = this.data[this.getKeyName(key)];\n      return {\n        key,\n        presence: 'present',\n        value: data,\n      };\n    }\n    return {\n      key,\n      presence: 'absent',\n      value: undefined,\n    };\n  }\n\n  async set<T>(key: string, data: T): Promise<void> {\n    const serialized = JSON.parse(JSON.stringify(data), (_key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        Object.freeze(value);\n      }\n      return value;\n    });\n    this.data[this.getKeyName(key)] = serialized;\n    this.notifyChanges({\n      key,\n      presence: 'present',\n      value: serialized,\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    delete this.data[this.getKeyName(key)];\n    this.notifyChanges({\n      key,\n      presence: 'absent',\n      value: undefined,\n    });\n  }\n\n  observe$<T extends JsonValue>(\n    key: string,\n  ): Observable<StorageValueSnapshot<T>> {\n    return this.observable.filter(({ key: messageKey }) => messageKey === key);\n  }\n\n  private getKeyName(key: string) {\n    return `${this.namespace}/${encodeURIComponent(key)}`;\n  }\n\n  private notifyChanges<T extends JsonValue>(message: StorageValueSnapshot<T>) {\n    for (const subscription of this.subscribers) {\n      subscription.next(message);\n    }\n  }\n\n  private subscribers = new Set<\n    ZenObservable.SubscriptionObserver<StorageValueSnapshot<JsonValue>>\n  >();\n\n  private readonly observable = new ObservableImpl<\n    StorageValueSnapshot<JsonValue>\n  >(subscriber => {\n    this.subscribers.add(subscriber);\n    return () => {\n      this.subscribers.delete(subscriber);\n    };\n  });\n}\n"],"names":[],"mappings":"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"}