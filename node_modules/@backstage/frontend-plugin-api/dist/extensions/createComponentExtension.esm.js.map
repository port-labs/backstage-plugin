{"version":3,"file":"createComponentExtension.esm.js","sources":["../../src/extensions/createComponentExtension.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { lazy, ComponentType } from 'react';\nimport {\n  AnyExtensionInputMap,\n  ResolvedExtensionInputs,\n  createExtension,\n  createExtensionDataRef,\n} from '../wiring';\nimport { Expand } from '../types';\nimport { PortableSchema } from '../schema';\nimport { ComponentRef } from '../components';\n\n/** @public */\nexport function createComponentExtension<\n  TProps extends {},\n  TConfig extends {},\n  TInputs extends AnyExtensionInputMap,\n>(options: {\n  ref: ComponentRef<TProps>;\n  name?: string;\n  disabled?: boolean;\n  /** @deprecated these will be removed in the future */\n  inputs?: TInputs;\n  /** @deprecated these will be removed in the future */\n  configSchema?: PortableSchema<TConfig>;\n  loader:\n    | {\n        lazy: (values: {\n          config: TConfig;\n          inputs: Expand<ResolvedExtensionInputs<TInputs>>;\n        }) => Promise<ComponentType<TProps>>;\n      }\n    | {\n        sync: (values: {\n          config: TConfig;\n          inputs: Expand<ResolvedExtensionInputs<TInputs>>;\n        }) => ComponentType<TProps>;\n      };\n}) {\n  return createExtension({\n    kind: 'component',\n    namespace: options.ref.id,\n    name: options.name,\n    attachTo: { id: 'app', input: 'components' },\n    inputs: options.inputs,\n    disabled: options.disabled,\n    configSchema: options.configSchema,\n    output: {\n      component: createComponentExtension.componentDataRef,\n    },\n    factory({ config, inputs }) {\n      if ('sync' in options.loader) {\n        return {\n          component: {\n            ref: options.ref,\n            impl: options.loader.sync({ config, inputs }) as ComponentType,\n          },\n        };\n      }\n      const lazyLoader = options.loader.lazy;\n      const ExtensionComponent = lazy(() =>\n        lazyLoader({ config, inputs }).then(Component => ({\n          default: Component,\n        })),\n      ) as unknown as ComponentType;\n\n      return {\n        component: {\n          ref: options.ref,\n          impl: ExtensionComponent,\n        },\n      };\n    },\n  });\n}\n\n/** @public */\nexport namespace createComponentExtension {\n  export const componentDataRef = createExtensionDataRef<{\n    ref: ComponentRef;\n    impl: ComponentType;\n  }>().with({ id: 'core.component.component' });\n}\n"],"names":["createComponentExtension"],"mappings":";;;;;AA4BO,SAAS,yBAId,OAqBC,EAAA;AACD,EAAA,OAAO,eAAgB,CAAA;AAAA,IACrB,IAAM,EAAA,WAAA;AAAA,IACN,SAAA,EAAW,QAAQ,GAAI,CAAA,EAAA;AAAA,IACvB,MAAM,OAAQ,CAAA,IAAA;AAAA,IACd,QAAU,EAAA,EAAE,EAAI,EAAA,KAAA,EAAO,OAAO,YAAa,EAAA;AAAA,IAC3C,QAAQ,OAAQ,CAAA,MAAA;AAAA,IAChB,UAAU,OAAQ,CAAA,QAAA;AAAA,IAClB,cAAc,OAAQ,CAAA,YAAA;AAAA,IACtB,MAAQ,EAAA;AAAA,MACN,WAAW,wBAAyB,CAAA,gBAAA;AAAA,KACtC;AAAA,IACA,OAAQ,CAAA,EAAE,MAAQ,EAAA,MAAA,EAAU,EAAA;AAC1B,MAAI,IAAA,MAAA,IAAU,QAAQ,MAAQ,EAAA;AAC5B,QAAO,OAAA;AAAA,UACL,SAAW,EAAA;AAAA,YACT,KAAK,OAAQ,CAAA,GAAA;AAAA,YACb,MAAM,OAAQ,CAAA,MAAA,CAAO,KAAK,EAAE,MAAA,EAAQ,QAAQ,CAAA;AAAA,WAC9C;AAAA,SACF,CAAA;AAAA,OACF;AACA,MAAM,MAAA,UAAA,GAAa,QAAQ,MAAO,CAAA,IAAA,CAAA;AAClC,MAAA,MAAM,kBAAqB,GAAA,IAAA;AAAA,QAAK,MAC9B,WAAW,EAAE,MAAA,EAAQ,QAAQ,CAAA,CAAE,KAAK,CAAc,SAAA,MAAA;AAAA,UAChD,OAAS,EAAA,SAAA;AAAA,SACT,CAAA,CAAA;AAAA,OACJ,CAAA;AAEA,MAAO,OAAA;AAAA,QACL,SAAW,EAAA;AAAA,UACT,KAAK,OAAQ,CAAA,GAAA;AAAA,UACb,IAAM,EAAA,kBAAA;AAAA,SACR;AAAA,OACF,CAAA;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AACH,CAAA;AAAA,CAGO,CAAUA,yBAAV,KAAA;AACE,EAAMA,yBAAAA,CAAA,mBAAmB,sBAG7B,EAAA,CAAE,KAAK,EAAE,EAAA,EAAI,4BAA4B,CAAA,CAAA;AAAA,CAJ7B,EAAA,wBAAA,KAAA,wBAAA,GAAA,EAAA,CAAA,CAAA;;;;"}