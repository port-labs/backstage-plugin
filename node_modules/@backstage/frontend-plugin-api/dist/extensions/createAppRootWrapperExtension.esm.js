import React from 'react';
import { createExtension } from '../wiring/createExtension.esm.js';
import { AppRootWrapperBlueprint } from '../blueprints/AppRootWrapperBlueprint.esm.js';

function createAppRootWrapperExtension(options) {
  return createExtension({
    kind: "app-root-wrapper",
    namespace: options.namespace,
    name: options.name,
    attachTo: options.attachTo ?? { id: "app/root", input: "wrappers" },
    configSchema: options.configSchema,
    disabled: options.disabled,
    inputs: options.inputs,
    output: {
      component: AppRootWrapperBlueprint.dataRefs.component
    },
    factory({ inputs, config }) {
      const Component = (props) => {
        return /* @__PURE__ */ React.createElement(options.Component, { inputs, config }, props.children);
      };
      return {
        component: Component
      };
    }
  });
}
((createAppRootWrapperExtension2) => {
  createAppRootWrapperExtension2.componentDataRef = AppRootWrapperBlueprint.dataRefs.component;
})(createAppRootWrapperExtension || (createAppRootWrapperExtension = {}));

export { createAppRootWrapperExtension };
//# sourceMappingURL=createAppRootWrapperExtension.esm.js.map
