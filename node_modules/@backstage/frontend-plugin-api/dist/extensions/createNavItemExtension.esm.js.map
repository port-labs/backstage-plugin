{"version":3,"file":"createNavItemExtension.esm.js","sources":["../../src/extensions/createNavItemExtension.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IconComponent } from '@backstage/core-plugin-api';\nimport { createSchemaFromZod } from '../schema/createSchemaFromZod';\nimport { createExtension } from '../wiring';\nimport { RouteRef } from '../routing';\nimport { NavItemBlueprint } from '../blueprints/NavItemBlueprint';\n\n/**\n * Helper for creating extensions for a nav item.\n *\n * @public\n * @deprecated Use {@link NavItemBlueprint} instead.\n */\nexport function createNavItemExtension(options: {\n  namespace?: string;\n  name?: string;\n  routeRef: RouteRef<undefined>;\n  title: string;\n  icon: IconComponent;\n}) {\n  const { routeRef, title, icon, namespace, name } = options;\n  return createExtension({\n    namespace,\n    name,\n    kind: 'nav-item',\n    attachTo: { id: 'app/nav', input: 'items' },\n    configSchema: createSchemaFromZod(z =>\n      z.object({\n        title: z.string().default(title),\n      }),\n    ),\n    output: {\n      navTarget: NavItemBlueprint.dataRefs.target,\n    },\n    factory: ({ config }) => ({\n      navTarget: {\n        title: config.title,\n        icon,\n        routeRef,\n      },\n    }),\n  });\n}\n\n/**\n * @public\n * @deprecated Use {@link NavItemBlueprint} instead.\n */\nexport namespace createNavItemExtension {\n  /**\n   * @deprecated Use {@link NavItemBlueprint} instead.\n   */\n  export const targetDataRef = NavItemBlueprint.dataRefs.target;\n}\n"],"names":["createNavItemExtension"],"mappings":";;;;;AA4BO,SAAS,uBAAuB,OAMpC,EAAA;AACD,EAAA,MAAM,EAAE,QAAU,EAAA,KAAA,EAAO,IAAM,EAAA,SAAA,EAAW,MAAS,GAAA,OAAA,CAAA;AACnD,EAAA,OAAO,eAAgB,CAAA;AAAA,IACrB,SAAA;AAAA,IACA,IAAA;AAAA,IACA,IAAM,EAAA,UAAA;AAAA,IACN,QAAU,EAAA,EAAE,EAAI,EAAA,SAAA,EAAW,OAAO,OAAQ,EAAA;AAAA,IAC1C,YAAc,EAAA,mBAAA;AAAA,MAAoB,CAAA,CAAA,KAChC,EAAE,MAAO,CAAA;AAAA,QACP,KAAO,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,KAAK,CAAA;AAAA,OAChC,CAAA;AAAA,KACH;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,SAAA,EAAW,iBAAiB,QAAS,CAAA,MAAA;AAAA,KACvC;AAAA,IACA,OAAS,EAAA,CAAC,EAAE,MAAA,EAAc,MAAA;AAAA,MACxB,SAAW,EAAA;AAAA,QACT,OAAO,MAAO,CAAA,KAAA;AAAA,QACd,IAAA;AAAA,QACA,QAAA;AAAA,OACF;AAAA,KACF,CAAA;AAAA,GACD,CAAA,CAAA;AACH,CAAA;AAAA,CAMO,CAAUA,uBAAV,KAAA;AAIE,EAAMA,uBAAAA,CAAA,aAAgB,GAAA,gBAAA,CAAiB,QAAS,CAAA,MAAA,CAAA;AAAA,CAJxC,EAAA,sBAAA,KAAA,sBAAA,GAAA,EAAA,CAAA,CAAA;;;;"}