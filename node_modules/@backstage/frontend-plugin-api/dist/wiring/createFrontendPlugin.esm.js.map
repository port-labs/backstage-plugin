{"version":3,"file":"createFrontendPlugin.esm.js","sources":["../../src/wiring/createFrontendPlugin.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionDefinition } from './createExtension';\nimport {\n  Extension,\n  ResolveExtensionId,\n  resolveExtensionDefinition,\n} from './resolveExtensionDefinition';\nimport {\n  AnyExternalRoutes,\n  AnyRoutes,\n  BackstagePlugin,\n  FeatureFlagConfig,\n} from './types';\n\n/** @public */\nexport interface PluginOptions<\n  TId extends string,\n  TRoutes extends AnyRoutes,\n  TExternalRoutes extends AnyExternalRoutes,\n  TExtensions extends readonly ExtensionDefinition<any, any>[],\n> {\n  id: TId;\n  routes?: TRoutes;\n  externalRoutes?: TExternalRoutes;\n  extensions?: TExtensions;\n  featureFlags?: FeatureFlagConfig[];\n}\n\n/** @public */\nexport interface InternalBackstagePlugin<\n  TRoutes extends AnyRoutes = AnyRoutes,\n  TExternalRoutes extends AnyExternalRoutes = AnyExternalRoutes,\n> extends BackstagePlugin<TRoutes, TExternalRoutes> {\n  readonly version: 'v1';\n  readonly extensions: Extension<unknown>[];\n  readonly featureFlags: FeatureFlagConfig[];\n}\n\n/** @public */\nexport function createFrontendPlugin<\n  TId extends string,\n  TRoutes extends AnyRoutes = {},\n  TExternalRoutes extends AnyExternalRoutes = {},\n  TExtensions extends readonly ExtensionDefinition<any, any>[] = [],\n>(\n  options: PluginOptions<TId, TRoutes, TExternalRoutes, TExtensions>,\n): BackstagePlugin<\n  TRoutes,\n  TExternalRoutes,\n  {\n    [KExtension in TExtensions[number] as ResolveExtensionId<\n      KExtension,\n      TId\n    >]: KExtension;\n  }\n> {\n  const extensions = new Array<Extension<unknown>>();\n  const extensionDefinitionsById = new Map<\n    string,\n    ExtensionDefinition<unknown>\n  >();\n\n  for (const def of options.extensions ?? []) {\n    const ext = resolveExtensionDefinition(def, { namespace: options.id });\n    extensions.push(ext);\n    extensionDefinitionsById.set(ext.id, { ...def, namespace: options.id });\n  }\n\n  if (extensions.length !== extensionDefinitionsById.size) {\n    const extensionIds = extensions.map(e => e.id);\n    const duplicates = Array.from(\n      new Set(\n        extensionIds.filter((id, index) => extensionIds.indexOf(id) !== index),\n      ),\n    );\n    // TODO(Rugvip): This could provide some more information about the kind + name of the extensions\n    throw new Error(\n      `Plugin '${options.id}' provided duplicate extensions: ${duplicates.join(\n        ', ',\n      )}`,\n    );\n  }\n\n  return {\n    $$type: '@backstage/BackstagePlugin',\n    version: 'v1',\n    id: options.id,\n    routes: options.routes ?? ({} as TRoutes),\n    externalRoutes: options.externalRoutes ?? ({} as TExternalRoutes),\n    featureFlags: options.featureFlags ?? [],\n    extensions,\n    getExtension(id) {\n      return extensionDefinitionsById.get(id);\n    },\n    toString() {\n      return `Plugin{id=${options.id}}`;\n    },\n    withOverrides(overrides) {\n      const overriddenExtensionIds = new Set(\n        overrides.extensions.map(\n          e => resolveExtensionDefinition(e, { namespace: options.id }).id,\n        ),\n      );\n      const nonOverriddenExtensions = (options.extensions ?? []).filter(\n        e =>\n          !overriddenExtensionIds.has(\n            resolveExtensionDefinition(e, { namespace: options.id }).id,\n          ),\n      );\n      return createFrontendPlugin({\n        ...options,\n        extensions: [...nonOverriddenExtensions, ...overrides.extensions],\n      });\n    },\n  } as InternalBackstagePlugin<TRoutes, TExternalRoutes>;\n}\n\n/** @internal */\nexport function toInternalBackstagePlugin(\n  plugin: BackstagePlugin,\n): InternalBackstagePlugin {\n  const internal = plugin as InternalBackstagePlugin;\n  if (internal.$$type !== '@backstage/BackstagePlugin') {\n    throw new Error(`Invalid plugin instance, bad type '${internal.$$type}'`);\n  }\n  if (internal.version !== 'v1') {\n    throw new Error(\n      `Invalid plugin instance, bad version '${internal.version}'`,\n    );\n  }\n  return internal;\n}\n\n/**\n * @public\n * @deprecated Use {@link createFrontendPlugin} instead.\n */\nexport const createPlugin = createFrontendPlugin;\n"],"names":[],"mappings":";;AAsDO,SAAS,qBAMd,OAUA,EAAA;AACA,EAAM,MAAA,UAAA,GAAa,IAAI,KAA0B,EAAA,CAAA;AACjD,EAAM,MAAA,wBAAA,uBAA+B,GAGnC,EAAA,CAAA;AAEF,EAAA,KAAA,MAAW,GAAO,IAAA,OAAA,CAAQ,UAAc,IAAA,EAAI,EAAA;AAC1C,IAAA,MAAM,MAAM,0BAA2B,CAAA,GAAA,EAAK,EAAE,SAAW,EAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AACrE,IAAA,UAAA,CAAW,KAAK,GAAG,CAAA,CAAA;AACnB,IAAyB,wBAAA,CAAA,GAAA,CAAI,IAAI,EAAI,EAAA,EAAE,GAAG,GAAK,EAAA,SAAA,EAAW,OAAQ,CAAA,EAAA,EAAI,CAAA,CAAA;AAAA,GACxE;AAEA,EAAI,IAAA,UAAA,CAAW,MAAW,KAAA,wBAAA,CAAyB,IAAM,EAAA;AACvD,IAAA,MAAM,YAAe,GAAA,UAAA,CAAW,GAAI,CAAA,CAAA,CAAA,KAAK,EAAE,EAAE,CAAA,CAAA;AAC7C,IAAA,MAAM,aAAa,KAAM,CAAA,IAAA;AAAA,MACvB,IAAI,GAAA;AAAA,QACF,YAAA,CAAa,OAAO,CAAC,EAAA,EAAI,UAAU,YAAa,CAAA,OAAA,CAAQ,EAAE,CAAA,KAAM,KAAK,CAAA;AAAA,OACvE;AAAA,KACF,CAAA;AAEA,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAAA,iCAAA,EAAoC,UAAW,CAAA,IAAA;AAAA,QAClE,IAAA;AAAA,OACD,CAAA,CAAA;AAAA,KACH,CAAA;AAAA,GACF;AAEA,EAAO,OAAA;AAAA,IACL,MAAQ,EAAA,4BAAA;AAAA,IACR,OAAS,EAAA,IAAA;AAAA,IACT,IAAI,OAAQ,CAAA,EAAA;AAAA,IACZ,MAAA,EAAQ,OAAQ,CAAA,MAAA,IAAW,EAAC;AAAA,IAC5B,cAAA,EAAgB,OAAQ,CAAA,cAAA,IAAmB,EAAC;AAAA,IAC5C,YAAA,EAAc,OAAQ,CAAA,YAAA,IAAgB,EAAC;AAAA,IACvC,UAAA;AAAA,IACA,aAAa,EAAI,EAAA;AACf,MAAO,OAAA,wBAAA,CAAyB,IAAI,EAAE,CAAA,CAAA;AAAA,KACxC;AAAA,IACA,QAAW,GAAA;AACT,MAAO,OAAA,CAAA,UAAA,EAAa,QAAQ,EAAE,CAAA,CAAA,CAAA,CAAA;AAAA,KAChC;AAAA,IACA,cAAc,SAAW,EAAA;AACvB,MAAA,MAAM,yBAAyB,IAAI,GAAA;AAAA,QACjC,UAAU,UAAW,CAAA,GAAA;AAAA,UACnB,CAAA,CAAA,KAAK,2BAA2B,CAAG,EAAA,EAAE,WAAW,OAAQ,CAAA,EAAA,EAAI,CAAE,CAAA,EAAA;AAAA,SAChE;AAAA,OACF,CAAA;AACA,MAAA,MAAM,uBAA2B,GAAA,CAAA,OAAA,CAAQ,UAAc,IAAA,EAAI,EAAA,MAAA;AAAA,QACzD,CAAA,CAAA,KACE,CAAC,sBAAuB,CAAA,GAAA;AAAA,UACtB,2BAA2B,CAAG,EAAA,EAAE,WAAW,OAAQ,CAAA,EAAA,EAAI,CAAE,CAAA,EAAA;AAAA,SAC3D;AAAA,OACJ,CAAA;AACA,MAAA,OAAO,oBAAqB,CAAA;AAAA,QAC1B,GAAG,OAAA;AAAA,QACH,YAAY,CAAC,GAAG,uBAAyB,EAAA,GAAG,UAAU,UAAU,CAAA;AAAA,OACjE,CAAA,CAAA;AAAA,KACH;AAAA,GACF,CAAA;AACF,CAAA;AAsBO,MAAM,YAAe,GAAA;;;;"}