{"version":3,"file":"useEntityListProvider.esm.js","sources":["../../src/hooks/useEntityListProvider.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { compact, isEqual } from 'lodash';\nimport qs from 'qs';\nimport React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport useAsyncFn from 'react-use/esm/useAsyncFn';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport useMountedState from 'react-use/esm/useMountedState';\nimport { catalogApiRef } from '../api';\nimport {\n  EntityErrorFilter,\n  EntityKindFilter,\n  EntityLifecycleFilter,\n  EntityOrphanFilter,\n  EntityOwnerFilter,\n  EntityTagFilter,\n  EntityTextFilter,\n  EntityTypeFilter,\n  UserListFilter,\n  EntityNamespaceFilter,\n  EntityUserFilter,\n} from '../filters';\nimport { EntityFilter } from '../types';\nimport {\n  reduceBackendCatalogFilters,\n  reduceCatalogFilters,\n  reduceEntityFilters,\n} from '../utils';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { QueryEntitiesResponse } from '@backstage/catalog-client';\n\n/** @public */\nexport type DefaultEntityFilters = {\n  kind?: EntityKindFilter;\n  type?: EntityTypeFilter;\n  user?: UserListFilter | EntityUserFilter;\n  owners?: EntityOwnerFilter;\n  lifecycles?: EntityLifecycleFilter;\n  tags?: EntityTagFilter;\n  text?: EntityTextFilter;\n  orphan?: EntityOrphanFilter;\n  error?: EntityErrorFilter;\n  namespace?: EntityNamespaceFilter;\n};\n\n/** @public */\nexport type EntityListContextProps<\n  EntityFilters extends DefaultEntityFilters = DefaultEntityFilters,\n> = {\n  /**\n   * The currently registered filters, adhering to the shape of DefaultEntityFilters or an extension\n   * of that default (to add custom filter types).\n   */\n  filters: EntityFilters;\n\n  /**\n   * The resolved list of catalog entities, after all filters are applied.\n   */\n  entities: Entity[];\n\n  /**\n   * The resolved list of catalog entities, after _only catalog-backend_ filters are applied.\n   */\n  backendEntities: Entity[];\n\n  /**\n   * Update one or more of the registered filters. Optional filters can be set to `undefined` to\n   * reset the filter.\n   */\n  updateFilters: (\n    filters:\n      | Partial<EntityFilters>\n      | ((prevFilters: EntityFilters) => Partial<EntityFilters>),\n  ) => void;\n\n  /**\n   * Filter values from query parameters.\n   */\n  queryParameters: Partial<Record<keyof EntityFilters, string | string[]>>;\n\n  loading: boolean;\n  error?: Error;\n\n  pageInfo?: {\n    next?: () => void;\n    prev?: () => void;\n  };\n\n  totalItems?: number;\n};\n\n/**\n * Creates new context for entity listing and filtering.\n * @public\n */\nexport const EntityListContext = createContext<\n  EntityListContextProps<any> | undefined\n>(undefined);\n\ntype OutputState<EntityFilters extends DefaultEntityFilters> = {\n  appliedFilters: EntityFilters;\n  appliedCursor?: string;\n  entities: Entity[];\n  backendEntities: Entity[];\n  pageInfo?: QueryEntitiesResponse['pageInfo'];\n  totalItems?: number;\n};\n\n/**\n * @public\n */\nexport type EntityListProviderProps = PropsWithChildren<{\n  pagination?: boolean | { limit?: number };\n}>;\n\n/**\n * Provides entities and filters for a catalog listing.\n * @public\n */\nexport const EntityListProvider = <EntityFilters extends DefaultEntityFilters>(\n  props: EntityListProviderProps,\n) => {\n  const isMounted = useMountedState();\n  const catalogApi = useApi(catalogApiRef);\n  const [requestedFilters, setRequestedFilters] = useState<EntityFilters>(\n    {} as EntityFilters,\n  );\n\n  // We use react-router's useLocation hook so updates from external sources trigger an update to\n  // the queryParameters in outputState. Updates from this hook use replaceState below and won't\n  // trigger a useLocation change; this would instead come from an external source, such as a manual\n  // update of the URL or two catalog sidebar links with different catalog filters.\n  const location = useLocation();\n\n  const enablePagination =\n    props.pagination === true || typeof props.pagination === 'object';\n\n  const limit =\n    props.pagination &&\n    typeof props.pagination === 'object' &&\n    typeof props.pagination.limit === 'number'\n      ? props.pagination.limit\n      : 20;\n\n  const { queryParameters, cursor: initialCursor } = useMemo(() => {\n    const parsed = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n\n    return {\n      queryParameters: (parsed.filters ?? {}) as Record<\n        string,\n        string | string[]\n      >,\n      cursor: typeof parsed.cursor === 'string' ? parsed.cursor : undefined,\n    };\n  }, [location]);\n\n  const [cursor, setCursor] = useState(initialCursor);\n\n  const [outputState, setOutputState] = useState<OutputState<EntityFilters>>(\n    () => {\n      return {\n        appliedFilters: {} as EntityFilters,\n        entities: [],\n        backendEntities: [],\n        pageInfo: enablePagination ? {} : undefined,\n      };\n    },\n  );\n\n  // The main async filter worker. Note that while it has a lot of dependencies\n  // in terms of its implementation, the triggering only happens (debounced)\n  // based on the requested filters changing.\n  const [{ loading, error }, refresh] = useAsyncFn(\n    async () => {\n      const compacted = compact(Object.values(requestedFilters));\n\n      const queryParams = Object.keys(requestedFilters).reduce(\n        (params, key) => {\n          const filter = requestedFilters[key as keyof EntityFilters] as\n            | EntityFilter\n            | undefined;\n          if (filter?.toQueryValue) {\n            params[key] = filter.toQueryValue();\n          }\n          return params;\n        },\n        {} as Record<string, string | string[]>,\n      );\n\n      if (enablePagination) {\n        if (cursor) {\n          if (cursor !== outputState.appliedCursor) {\n            const entityFilter = reduceEntityFilters(compacted);\n            const response = await catalogApi.queryEntities({\n              cursor,\n              limit,\n            });\n            setOutputState({\n              appliedFilters: requestedFilters,\n              appliedCursor: cursor,\n              backendEntities: response.items,\n              entities: response.items.filter(entityFilter),\n              pageInfo: response.pageInfo,\n              totalItems: response.totalItems,\n            });\n          }\n        } else {\n          const entityFilter = reduceEntityFilters(compacted);\n          const backendFilter = reduceCatalogFilters(compacted);\n          const previousBackendFilter = reduceCatalogFilters(\n            compact(Object.values(outputState.appliedFilters)),\n          );\n\n          if (!isEqual(previousBackendFilter, backendFilter)) {\n            const response = await catalogApi.queryEntities({\n              ...backendFilter,\n              limit,\n              orderFields: [{ field: 'metadata.name', order: 'asc' }],\n            });\n            setOutputState({\n              appliedFilters: requestedFilters,\n              backendEntities: response.items,\n              entities: response.items.filter(entityFilter),\n              pageInfo: response.pageInfo,\n              totalItems: response.totalItems,\n            });\n          }\n        }\n      } else {\n        const entityFilter = reduceEntityFilters(compacted);\n        const backendFilter = reduceBackendCatalogFilters(compacted);\n        const previousBackendFilter = reduceBackendCatalogFilters(\n          compact(Object.values(outputState.appliedFilters)),\n        );\n\n        // TODO(mtlewis): currently entities will never be requested unless\n        // there's at least one filter, we should allow an initial request\n        // to happen with no filters.\n        if (!isEqual(previousBackendFilter, backendFilter)) {\n          // TODO(timbonicus): should limit fields here, but would need filter\n          // fields + table columns\n          const response = await catalogApi.getEntities({\n            filter: backendFilter,\n          });\n          const entities = response.items.filter(entityFilter);\n          setOutputState({\n            appliedFilters: requestedFilters,\n            backendEntities: response.items,\n            entities,\n            totalItems: entities.length,\n          });\n        } else {\n          const entities = outputState.backendEntities.filter(entityFilter);\n          setOutputState({\n            appliedFilters: requestedFilters,\n            backendEntities: outputState.backendEntities,\n            entities,\n            totalItems: entities.length,\n          });\n        }\n      }\n\n      if (isMounted()) {\n        const oldParams = qs.parse(location.search, {\n          ignoreQueryPrefix: true,\n        });\n        const newParams = qs.stringify(\n          { ...oldParams, filters: queryParams, cursor },\n          { addQueryPrefix: true, arrayFormat: 'repeat' },\n        );\n        const newUrl = `${window.location.pathname}${newParams}`;\n        // We use direct history manipulation since useSearchParams and\n        // useNavigate in react-router-dom cause unnecessary extra rerenders.\n        // Also make sure to replace the state rather than pushing, since we\n        // don't want there to be back/forward slots for every single filter\n        // change.\n        window.history?.replaceState(null, document.title, newUrl);\n      }\n    },\n    [\n      catalogApi,\n      queryParameters,\n      requestedFilters,\n      outputState,\n      cursor,\n      enablePagination,\n    ],\n    { loading: true },\n  );\n\n  // Slight debounce on the refresh, since (especially on page load) several\n  // filters will be calling this in rapid succession.\n  useDebounce(refresh, 10, [requestedFilters, cursor]);\n\n  const updateFilters = useCallback(\n    (\n      update:\n        | Partial<EntityFilter>\n        | ((prevFilters: EntityFilters) => Partial<EntityFilters>),\n    ) => {\n      // changing filters will affect pagination, so we need to reset\n      // the cursor and start from the first page.\n      // TODO(vinzscam): this is currently causing issues at page reload\n      // where the state is not kept. Unfortunately we need to rethink\n      // the way filters work in order to fix this.\n      setCursor(undefined);\n      setRequestedFilters(prevFilters => {\n        const newFilters =\n          typeof update === 'function' ? update(prevFilters) : update;\n        return { ...prevFilters, ...newFilters };\n      });\n    },\n    [],\n  );\n\n  const pageInfo = useMemo(() => {\n    if (!enablePagination) {\n      return undefined;\n    }\n\n    const prevCursor = outputState.pageInfo?.prevCursor;\n    const nextCursor = outputState.pageInfo?.nextCursor;\n    return {\n      prev: prevCursor ? () => setCursor(prevCursor) : undefined,\n      next: nextCursor ? () => setCursor(nextCursor) : undefined,\n    };\n  }, [enablePagination, outputState.pageInfo]);\n\n  const value = useMemo(\n    () => ({\n      filters: outputState.appliedFilters,\n      entities: outputState.entities,\n      backendEntities: outputState.backendEntities,\n      updateFilters,\n      queryParameters,\n      loading,\n      error,\n      pageInfo,\n      totalItems: outputState.totalItems,\n    }),\n    [outputState, updateFilters, queryParameters, loading, error, pageInfo],\n  );\n\n  return (\n    <EntityListContext.Provider value={value}>\n      {props.children}\n    </EntityListContext.Provider>\n  );\n};\n\n/**\n * Hook for interacting with the entity list context provided by the {@link EntityListProvider}.\n * @public\n */\nexport function useEntityList<\n  EntityFilters extends DefaultEntityFilters = DefaultEntityFilters,\n>(): EntityListContextProps<EntityFilters> {\n  const context = useContext(EntityListContext);\n  if (!context)\n    throw new Error('useEntityList must be used within EntityListProvider');\n  return context;\n}\n"],"names":[],"mappings":"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"}