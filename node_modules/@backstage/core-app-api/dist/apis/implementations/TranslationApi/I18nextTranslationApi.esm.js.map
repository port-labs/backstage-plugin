{"version":3,"file":"I18nextTranslationApi.esm.js","sources":["../../../../src/apis/implementations/TranslationApi/I18nextTranslationApi.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppLanguageApi,\n  TranslationApi,\n  TranslationFunction,\n  TranslationMessages,\n  TranslationRef,\n  TranslationResource,\n  TranslationSnapshot,\n} from '@backstage/core-plugin-api/alpha';\nimport { createInstance as createI18n, type i18n as I18n } from 'i18next';\nimport ObservableImpl from 'zen-observable';\n\n// Internal import to avoid code duplication, this will lead to duplication in build output\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  toInternalTranslationResource,\n  InternalTranslationResourceLoader,\n} from '../../../../../core-plugin-api/src/translation/TranslationResource';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  toInternalTranslationRef,\n  InternalTranslationRef,\n} from '../../../../../core-plugin-api/src/translation/TranslationRef';\nimport { Observable } from '@backstage/types';\nimport { DEFAULT_LANGUAGE } from '../AppLanguageApi/AppLanguageSelector';\n\n/** @alpha */\nexport interface I18nextTranslationApiOptions {\n  languageApi: AppLanguageApi;\n  resources?: Array<TranslationMessages | TranslationResource>;\n}\n\nfunction removeNulls(\n  messages: Record<string, string | null>,\n): Record<string, string> {\n  return Object.fromEntries(\n    Object.entries(messages).filter(\n      (e): e is [string, string] => e[1] !== null,\n    ),\n  );\n}\n\n/**\n * The built-in i18next backend loading logic doesn't handle on the fly switches\n * of language very well. It gets a bit confused about whether resources are actually\n * loaded or not, so instead we implement our own resource loader.\n */\nclass ResourceLoader {\n  /** Loaded resources by loader key */\n  #loaded = new Set<string>();\n  /** Resource loading promises by loader key */\n  #loading = new Map<string, Promise<void>>();\n  /** Loaders for each resource language */\n  #loaders = new Map<string, InternalTranslationResourceLoader>();\n\n  constructor(\n    private readonly onLoad: (loaded: {\n      language: string;\n      namespace: string;\n      messages: Record<string, string | null>;\n    }) => void,\n  ) {}\n\n  addTranslationResource(resource: TranslationResource) {\n    const internalResource = toInternalTranslationResource(resource);\n    for (const entry of internalResource.resources) {\n      const key = this.#getLoaderKey(entry.language, internalResource.id);\n\n      // First loader to register wins, this means that resources registered in the app\n      // have priority over default resource from translation refs\n      if (!this.#loaders.has(key)) {\n        this.#loaders.set(key, entry.loader);\n      }\n    }\n  }\n\n  #getLoaderKey(language: string, namespace: string) {\n    return `${language}/${namespace}`;\n  }\n\n  needsLoading(language: string, namespace: string) {\n    const key = this.#getLoaderKey(language, namespace);\n    const loader = this.#loaders.get(key);\n    if (!loader) {\n      return false;\n    }\n\n    return !this.#loaded.has(key);\n  }\n\n  async load(language: string, namespace: string): Promise<void> {\n    const key = this.#getLoaderKey(language, namespace);\n\n    const loader = this.#loaders.get(key);\n    if (!loader) {\n      return;\n    }\n\n    if (this.#loaded.has(key)) {\n      return;\n    }\n\n    const loading = this.#loading.get(key);\n    if (loading) {\n      await loading;\n      return;\n    }\n\n    const load = loader().then(\n      result => {\n        this.onLoad({ language, namespace, messages: result.messages });\n        this.#loaded.add(key);\n      },\n      error => {\n        this.#loaded.add(key); // Do not try to load failed resources again\n        throw error;\n      },\n    );\n    this.#loading.set(key, load);\n    await load;\n  }\n}\n\n/** @alpha */\nexport class I18nextTranslationApi implements TranslationApi {\n  static create(options: I18nextTranslationApiOptions) {\n    const { languages } = options.languageApi.getAvailableLanguages();\n\n    const i18n = createI18n({\n      fallbackLng: DEFAULT_LANGUAGE,\n      supportedLngs: languages,\n      interpolation: {\n        escapeValue: false,\n      },\n      ns: [],\n      defaultNS: false,\n      fallbackNS: false,\n\n      // Disable resource loading on init, meaning i18n will be ready to use immediately\n      initImmediate: false,\n    });\n\n    i18n.init();\n    if (!i18n.isInitialized) {\n      throw new Error('i18next was unexpectedly not initialized');\n    }\n\n    const { language: initialLanguage } = options.languageApi.getLanguage();\n    if (initialLanguage !== DEFAULT_LANGUAGE) {\n      i18n.changeLanguage(initialLanguage);\n    }\n\n    const loader = new ResourceLoader(loaded => {\n      i18n.addResourceBundle(\n        loaded.language,\n        loaded.namespace,\n        removeNulls(loaded.messages),\n        false, // do not merge with existing translations\n        true, // overwrite translations\n      );\n    });\n\n    const resources = options?.resources || [];\n    // Iterate in reverse, giving higher priority to resources registered later\n    for (let i = resources.length - 1; i >= 0; i--) {\n      const resource = resources[i];\n      if (resource.$$type === '@backstage/TranslationResource') {\n        loader.addTranslationResource(resource);\n      } else if (resource.$$type === '@backstage/TranslationMessages') {\n        // Overrides for default messages, created with createTranslationMessages and installed via app\n        i18n.addResourceBundle(\n          DEFAULT_LANGUAGE,\n          resource.id,\n          removeNulls(resource.messages),\n          true, // merge with existing translations\n          false, // do not overwrite translations\n        );\n      }\n    }\n\n    const instance = new I18nextTranslationApi(\n      i18n,\n      loader,\n      options.languageApi.getLanguage().language,\n    );\n\n    options.languageApi.language$().subscribe(({ language }) => {\n      instance.#changeLanguage(language);\n    });\n\n    return instance;\n  }\n\n  #i18n: I18n;\n  #loader: ResourceLoader;\n  #language: string;\n\n  /** Keep track of which refs we have registered default resources for */\n  #registeredRefs = new Set<string>();\n  /** Notify observers when language changes */\n  #languageChangeListeners = new Set<() => void>();\n\n  private constructor(i18n: I18n, loader: ResourceLoader, language: string) {\n    this.#i18n = i18n;\n    this.#loader = loader;\n    this.#language = language;\n  }\n\n  getTranslation<TMessages extends { [key in string]: string }>(\n    translationRef: TranslationRef<string, TMessages>,\n  ): TranslationSnapshot<TMessages> {\n    const internalRef = toInternalTranslationRef(translationRef);\n\n    this.#registerDefaults(internalRef);\n\n    return this.#createSnapshot(internalRef);\n  }\n\n  translation$<TMessages extends { [key in string]: string }>(\n    translationRef: TranslationRef<string, TMessages>,\n  ): Observable<TranslationSnapshot<TMessages>> {\n    const internalRef = toInternalTranslationRef(translationRef);\n\n    this.#registerDefaults(internalRef);\n\n    return new ObservableImpl<TranslationSnapshot<TMessages>>(subscriber => {\n      let loadTicket = {}; // To check for stale loads\n\n      const loadResource = () => {\n        loadTicket = {};\n        const ticket = loadTicket;\n        this.#loader.load(this.#language, internalRef.id).then(\n          () => {\n            if (ticket === loadTicket) {\n              const snapshot = this.#createSnapshot(internalRef);\n              if (snapshot.ready) {\n                subscriber.next(snapshot);\n              }\n            }\n          },\n          error => {\n            if (ticket === loadTicket) {\n              subscriber.error(Array.isArray(error) ? error[0] : error);\n            }\n          },\n        );\n      };\n\n      const onChange = () => {\n        const snapshot = this.#createSnapshot(internalRef);\n        if (snapshot.ready) {\n          subscriber.next(snapshot);\n        } else {\n          loadResource();\n        }\n      };\n\n      if (this.#loader.needsLoading(this.#language, internalRef.id)) {\n        loadResource();\n      }\n\n      this.#languageChangeListeners.add(onChange);\n      return () => {\n        this.#languageChangeListeners.delete(onChange);\n      };\n    });\n  }\n\n  #changeLanguage(language: string): void {\n    if (this.#language !== language) {\n      this.#language = language;\n      this.#i18n.changeLanguage(language);\n      this.#languageChangeListeners.forEach(listener => listener());\n    }\n  }\n\n  #createSnapshot<TMessages extends { [key in string]: string }>(\n    internalRef: InternalTranslationRef<string, TMessages>,\n  ): TranslationSnapshot<TMessages> {\n    if (this.#loader.needsLoading(this.#language, internalRef.id)) {\n      return { ready: false };\n    }\n\n    const t = this.#i18n.getFixedT(\n      null,\n      internalRef.id,\n    ) as TranslationFunction<TMessages>;\n\n    return {\n      ready: true,\n      t,\n    };\n  }\n\n  #registerDefaults(internalRef: InternalTranslationRef): void {\n    if (this.#registeredRefs.has(internalRef.id)) {\n      return;\n    }\n    this.#registeredRefs.add(internalRef.id);\n\n    const defaultMessages = internalRef.getDefaultMessages();\n    this.#i18n.addResourceBundle(\n      DEFAULT_LANGUAGE,\n      internalRef.id,\n      defaultMessages,\n      true, // merge with existing translations\n      false, // do not overwrite translations\n    );\n\n    const defaultResource = internalRef.getDefaultResource();\n    if (defaultResource) {\n      this.#loader.addTranslationResource(defaultResource);\n    }\n  }\n}\n"],"names":["createI18n"],"mappings":"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"}