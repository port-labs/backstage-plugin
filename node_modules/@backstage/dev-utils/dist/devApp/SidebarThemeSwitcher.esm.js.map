{"version":3,"file":"SidebarThemeSwitcher.esm.js","sources":["../../src/devApp/SidebarThemeSwitcher.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SidebarItem } from '@backstage/core-components';\nimport { appThemeApiRef, useApi } from '@backstage/core-plugin-api';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AutoIcon from '@material-ui/icons/BrightnessAuto';\nimport React, { cloneElement, useCallback, useState } from 'react';\nimport useObservable from 'react-use/esm/useObservable';\n\ntype ThemeIconProps = {\n  active?: boolean;\n  icon: JSX.Element | undefined;\n};\n\nconst ThemeIcon = ({ active, icon }: ThemeIconProps) =>\n  icon ? (\n    cloneElement(icon, {\n      color: active ? 'primary' : undefined,\n    })\n  ) : (\n    <AutoIcon color={active ? 'primary' : undefined} />\n  );\n\nexport const SidebarThemeSwitcher = () => {\n  const appThemeApi = useApi(appThemeApiRef);\n  const themeId = useObservable(\n    appThemeApi.activeThemeId$(),\n    appThemeApi.getActiveThemeId(),\n  );\n  const themeIds = appThemeApi.getInstalledThemes();\n  const activeTheme = themeIds.find(t => t.id === themeId);\n\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>();\n  const open = Boolean(anchorEl);\n\n  const handleOpen = (event: React.MouseEvent) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSelectTheme = (newThemeId: string | undefined) => {\n    if (themeIds.some(t => t.id === newThemeId)) {\n      appThemeApi.setActiveThemeId(newThemeId);\n    } else {\n      appThemeApi.setActiveThemeId(undefined);\n    }\n\n    setAnchorEl(undefined);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(undefined);\n  };\n\n  const ActiveIcon = useCallback(\n    () => <ThemeIcon icon={activeTheme?.icon} />,\n    [activeTheme],\n  );\n\n  return (\n    <>\n      <SidebarItem\n        icon={ActiveIcon}\n        text=\"Switch Theme\"\n        id=\"theme-button\"\n        aria-haspopup=\"listbox\"\n        aria-controls=\"theme-menu\"\n        aria-label=\"switch theme\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpen}\n      />\n\n      <Menu\n        id=\"theme-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'theme-button',\n          role: 'listbox',\n        }}\n      >\n        <MenuItem disabled>Choose a theme</MenuItem>\n        <MenuItem\n          selected={themeId === undefined}\n          onClick={() => handleSelectTheme(undefined)}\n        >\n          <ListItemIcon>\n            <ThemeIcon icon={undefined} active={themeId === undefined} />\n          </ListItemIcon>\n          <ListItemText>Auto</ListItemText>\n        </MenuItem>\n\n        {themeIds.map(theme => {\n          const active = theme.id === themeId;\n          return (\n            <MenuItem\n              key={theme.id}\n              selected={active}\n              aria-selected={active}\n              onClick={() => handleSelectTheme(theme.id)}\n            >\n              <ListItemIcon>\n                <ThemeIcon icon={theme.icon} active={active} />\n              </ListItemIcon>\n              <ListItemText>{theme.title}</ListItemText>\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}