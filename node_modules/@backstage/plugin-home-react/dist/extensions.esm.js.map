{"version":3,"file":"extensions.esm.js","sources":["../src/extensions.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Suspense } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { InfoCard } from '@backstage/core-components';\nimport { SettingsModal } from './components';\nimport { createReactExtension, useApp } from '@backstage/core-plugin-api';\nimport { RJSFSchema, UiSchema } from '@rjsf/utils';\n\n/**\n * @public\n */\nexport type ComponentRenderer = {\n  Renderer?: (props: RendererProps) => JSX.Element;\n};\n\n/**\n * @public\n */\nexport type ComponentParts = {\n  Content: (props?: any) => JSX.Element;\n  Actions?: () => JSX.Element;\n  Settings?: () => JSX.Element;\n  ContextProvider?: (props: any) => JSX.Element;\n};\n\n/**\n * @public\n */\nexport type RendererProps = { title?: string } & ComponentParts;\n\n/**\n * @public\n */\nexport type CardExtensionProps<T> = ComponentRenderer & { title?: string } & T;\n\n/**\n * @public\n */\nexport type CardLayout = {\n  width?: { minColumns?: number; maxColumns?: number; defaultColumns?: number };\n  height?: { minRows?: number; maxRows?: number; defaultRows?: number };\n};\n\n/**\n * @public\n */\nexport type CardSettings = {\n  schema?: RJSFSchema;\n  uiSchema?: UiSchema;\n};\n\n/**\n * @public\n */\nexport type CardConfig = {\n  layout?: CardLayout;\n  settings?: CardSettings;\n};\n\n/**\n * An extension creator to create card based components for the homepage\n *\n * @public\n */\nexport function createCardExtension<T>(options: {\n  title?: string;\n  components: () => Promise<ComponentParts>;\n  name?: string;\n  description?: string;\n  layout?: CardLayout;\n  settings?: CardSettings;\n}) {\n  const { title, components, name, description, layout, settings } = options;\n  // If widget settings schema is defined, we don't want to show the Settings icon or dialog\n  const isCustomizable = settings?.schema !== undefined;\n\n  return createReactExtension({\n    name,\n    data: { title, description, 'home.widget.config': { layout, settings } },\n    component: {\n      lazy: () =>\n        components().then(componentParts => {\n          return (props: CardExtensionProps<T>) => {\n            return (\n              <CardExtension\n                {...props}\n                {...componentParts}\n                title={props.title || title}\n                isCustomizable={isCustomizable}\n              />\n            );\n          };\n        }),\n    },\n  });\n}\n\ntype CardExtensionComponentProps<T> = CardExtensionProps<T> &\n  ComponentParts & {\n    isCustomizable?: boolean;\n    overrideTitle?: string;\n  };\n\nfunction CardExtension<T>(props: CardExtensionComponentProps<T>) {\n  const {\n    Renderer,\n    Content,\n    Settings,\n    Actions,\n    ContextProvider,\n    isCustomizable,\n    title,\n    ...childProps\n  } = props;\n  const app = useApp();\n  const { Progress } = app.getComponents();\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n\n  if (Renderer) {\n    return (\n      <Suspense fallback={<Progress />}>\n        <Renderer\n          {...(title && { title })}\n          {...{\n            Content,\n            ...(Actions ? { Actions } : {}),\n            ...(Settings && !isCustomizable ? { Settings } : {}),\n            ...(ContextProvider ? { ContextProvider } : {}),\n            ...childProps,\n          }}\n        />\n      </Suspense>\n    );\n  }\n\n  const cardProps = {\n    ...(title && { title }),\n    ...(Settings && !isCustomizable\n      ? {\n          action: (\n            <IconButton onClick={() => setSettingsOpen(true)}>\n              <SettingsIcon>Settings</SettingsIcon>\n            </IconButton>\n          ),\n        }\n      : {}),\n    ...(Actions\n      ? {\n          actions: <Actions />,\n        }\n      : {}),\n  };\n\n  const innerContent = (\n    <InfoCard {...cardProps}>\n      {Settings && !isCustomizable && (\n        <SettingsModal\n          open={settingsOpen}\n          componentName={title}\n          close={() => setSettingsOpen(false)}\n        >\n          <Settings />\n        </SettingsModal>\n      )}\n      <Content {...childProps} />\n    </InfoCard>\n  );\n\n  return (\n    <Suspense fallback={<Progress />}>\n      {ContextProvider ? (\n        <ContextProvider {...childProps}>{innerContent}</ContextProvider>\n      ) : (\n        innerContent\n      )}\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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"}