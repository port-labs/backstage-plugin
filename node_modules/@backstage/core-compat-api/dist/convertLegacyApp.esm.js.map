{"version":3,"file":"convertLegacyApp.esm.js","sources":["../src/convertLegacyApp.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  Children,\n  Fragment,\n  ReactElement,\n  ReactNode,\n  isValidElement,\n} from 'react';\nimport {\n  FrontendFeature,\n  coreExtensionData,\n  createExtension,\n  createExtensionInput,\n  createExtensionOverrides,\n} from '@backstage/frontend-plugin-api';\nimport { getComponentData } from '@backstage/core-plugin-api';\nimport { collectLegacyRoutes } from './collectLegacyRoutes';\n\nfunction selectChildren(\n  rootNode: ReactNode,\n  selector?: (element: ReactElement<{ children?: ReactNode }>) => boolean,\n  strictError?: string,\n): Array<ReactElement<{ children?: ReactNode }>> {\n  return Children.toArray(rootNode).flatMap(node => {\n    if (!isValidElement<{ children?: ReactNode }>(node)) {\n      return [];\n    }\n\n    if (node.type === Fragment) {\n      return selectChildren(node.props.children, selector, strictError);\n    }\n\n    if (selector === undefined || selector(node)) {\n      return [node];\n    }\n\n    if (strictError) {\n      throw new Error(strictError);\n    }\n\n    return selectChildren(node.props.children, selector, strictError);\n  });\n}\n\n/** @public */\nexport function convertLegacyApp(\n  rootElement: React.JSX.Element,\n): FrontendFeature[] {\n  if (getComponentData(rootElement, 'core.type') === 'FlatRoutes') {\n    return collectLegacyRoutes(rootElement);\n  }\n\n  const appRouterEls = selectChildren(\n    rootElement,\n    el => getComponentData(el, 'core.type') === 'AppRouter',\n  );\n  if (appRouterEls.length !== 1) {\n    throw new Error(\n      \"Failed to convert legacy app, AppRouter element could not been found. Make sure it's at the top level of the App element tree\",\n    );\n  }\n\n  const rootEls = selectChildren(\n    appRouterEls[0].props.children,\n    el =>\n      Boolean(el.props.children) &&\n      selectChildren(\n        el.props.children,\n        innerEl => getComponentData(innerEl, 'core.type') === 'FlatRoutes',\n      ).length === 1,\n  );\n  if (rootEls.length !== 1) {\n    throw new Error(\n      \"Failed to convert legacy app, Root element containing FlatRoutes could not been found. Make sure it's within the AppRouter element of the App element tree\",\n    );\n  }\n  const [rootEl] = rootEls;\n\n  const routesEls = selectChildren(\n    rootEls[0].props.children,\n    el => getComponentData(el, 'core.type') === 'FlatRoutes',\n  );\n  if (routesEls.length !== 1) {\n    throw new Error(\n      'Unexpectedly failed to find FlatRoutes in app element tree',\n    );\n  }\n  const [routesEl] = routesEls;\n\n  const CoreLayoutOverride = createExtension({\n    namespace: 'app',\n    name: 'layout',\n    attachTo: { id: 'app', input: 'root' },\n    inputs: {\n      content: createExtensionInput([coreExtensionData.reactElement], {\n        singleton: true,\n      }),\n    },\n    output: [coreExtensionData.reactElement],\n    factory({ inputs }) {\n      // Clone the root element, this replaces the FlatRoutes declared in the app with out content input\n      return [\n        coreExtensionData.reactElement(\n          React.cloneElement(\n            rootEl,\n            undefined,\n            inputs.content.get(coreExtensionData.reactElement),\n          ),\n        ),\n      ];\n    },\n  });\n  const CoreNavOverride = createExtension({\n    namespace: 'app',\n    name: 'nav',\n    attachTo: { id: 'app/layout', input: 'nav' },\n    output: [],\n    factory: () => [],\n    disabled: true,\n  });\n\n  const collectedRoutes = collectLegacyRoutes(routesEl);\n\n  return [\n    ...collectedRoutes,\n    createExtensionOverrides({\n      extensions: [CoreLayoutOverride, CoreNavOverride],\n    }),\n  ];\n}\n"],"names":[],"mappings":"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"}